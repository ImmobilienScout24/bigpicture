#!/usr/bin/env python
"""
Usage:
    analyse-model

"""
import networkx as nx

from docopt import docopt

from bigpicture import retrieve_config

arguments = docopt(__doc__)

gexf_file = retrieve_config('model-gexf-file', arguments, 'live-state')

g = nx.read_gexf(gexf_file)

timestamps = {}
for u, v, d in g.edges_iter(data=True):
    old = timestamps.get(d["timestamp"], 0)
    timestamps[d["timestamp"]] = old + 1

timeline = [t for t in sorted(timestamps.keys())]
print "\n".join(["%s: %i" % (t, timestamps[t]) for t in timeline])

subgraphs = {
    "2013-07-31T12:05:01": nx.create_empty_copy(g),
    "2013-07-31T13:05:01": nx.create_empty_copy(g)
}
for ts, sg in subgraphs.iteritems():
    print "%s: %s %i %i" % (ts, sg, sg.number_of_nodes(), sg.number_of_edges())

for u, v, d in g.edges_iter(data=True):
    sg = subgraphs.get(d["timestamp"])
    if sg is None:
        continue
    sg.add_edge(u, v, attr_dict=d)

for ts, sg in subgraphs.iteritems():
    print "%s: %s %i %i" % (ts, sg, sg.number_of_nodes(), sg.number_of_edges())

g0 = subgraphs[timeline[0]]
g1 = subgraphs[timeline[1]]
gd = g1.copy()
gd.remove_edges_from(e for e in g0.edges_iter())
print "%s %i %i" % (gd, gd.number_of_nodes(), gd.number_of_edges())

diff_file = "out/diff.dot"
nx.drawing.write_dot(gd, diff_file)
